[{"/Users/danielconstante/Desktop/React Portfolio/src/index.js":"1","/Users/danielconstante/Desktop/React Portfolio/src/reportWebVitals.js":"2","/Users/danielconstante/Desktop/React Portfolio/src/App.js":"3","/Users/danielconstante/Desktop/React Portfolio/src/components/MainComponent.js":"4","/Users/danielconstante/Desktop/React Portfolio/src/redux/configureStore.js":"5","/Users/danielconstante/Desktop/React Portfolio/src/components/HomeComponent.js":"6","/Users/danielconstante/Desktop/React Portfolio/src/components/ContactComponent.js":"7","/Users/danielconstante/Desktop/React Portfolio/src/components/AboutComponent.js":"8","/Users/danielconstante/Desktop/React Portfolio/src/redux/reducer.js":"9","/Users/danielconstante/Desktop/React Portfolio/src/shared/promotions.js":"10","/Users/danielconstante/Desktop/React Portfolio/src/shared/comments.js":"11","/Users/danielconstante/Desktop/React Portfolio/src/shared/campsites.js":"12","/Users/danielconstante/Desktop/React Portfolio/src/shared/partners.js":"13","/Users/danielconstante/Desktop/React Portfolio/src/components/CampsiteInfoComponent.js":"14","/Users/danielconstante/Desktop/React Portfolio/src/components/DirectoryComponent.js":"15","/Users/danielconstante/Desktop/React Portfolio/src/components/FooterComponent.js":"16","/Users/danielconstante/Desktop/React Portfolio/src/components/HeaderComponent.js":"17"},{"size":696,"mtime":1625604985871,"results":"18","hashOfConfig":"19"},{"size":362,"mtime":1624309160041,"results":"20","hashOfConfig":"19"},{"size":621,"mtime":1625072075953,"results":"21","hashOfConfig":"19"},{"size":2443,"mtime":1625835039583,"results":"22","hashOfConfig":"19"},{"size":223,"mtime":1625160080839,"results":"23","hashOfConfig":"19"},{"size":1111,"mtime":1625840215633,"results":"24","hashOfConfig":"19"},{"size":10897,"mtime":1625161410245,"results":"25","hashOfConfig":"19"},{"size":5291,"mtime":1625788380319,"results":"26","hashOfConfig":"19"},{"size":409,"mtime":1625073187029,"results":"27","hashOfConfig":"19"},{"size":287,"mtime":1625836955366,"results":"28","hashOfConfig":"19"},{"size":4243,"mtime":1624382652427,"results":"29","hashOfConfig":"19"},{"size":1785,"mtime":1625838750104,"results":"30","hashOfConfig":"19"},{"size":1014,"mtime":1625788008612,"results":"31","hashOfConfig":"19"},{"size":7595,"mtime":1625840173427,"results":"32","hashOfConfig":"19"},{"size":3188,"mtime":1625840609225,"results":"33","hashOfConfig":"19"},{"size":2282,"mtime":1625511969040,"results":"34","hashOfConfig":"19"},{"size":3500,"mtime":1625789974757,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"t9j856",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"38"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"38"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":3,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"74","usedDeprecatedRules":"38"},"/Users/danielconstante/Desktop/React Portfolio/src/index.js",[],["75","76"],"/Users/danielconstante/Desktop/React Portfolio/src/reportWebVitals.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/App.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/components/MainComponent.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/redux/configureStore.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/components/HomeComponent.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/components/ContactComponent.js",["77","78","79","80","81","82","83"],"import React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Label, Col, Row } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\nconst isNumber = val => !isNaN(+val);\nconst validEmail = val => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstName: '',\n            lastName: '',\n            phoneNum: '',\n            email: '',\n            agree: false,\n            contactType: 'By Phone',\n            feedback: '',\n            touched: {\n                firstName: false,\n                lastName: false,\n                phoneNum: false,\n                email: false\n            }\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n\n    handleSubmit(values) {\n        console.log('Current state is: ' + JSON.stringify(values));\n        alert('Current state is: ' + JSON.stringify(values));\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>Contact Us</h2>\n                        <hr />\n                    </div>\n                </div>\n\n                <div className=\"row row-content align-items-center\">\n                    <div className=\"col-sm-4\">\n                        <h5>Our Address</h5>\n                        <address>\n                            1 Nucamp Way<br />\n                            Seattle, WA 98001<br />\n                            U.S.A.\n                        </address>\n                    </div>\n                    <div className=\"col\">\n                        <a role=\"button\" className=\"btn btn-link\" href=\"tel:+12065551234\"><i className=\"fa fa-phone\" /> 1-206-555-1234</a><br />\n                        <a role=\"button\" className=\"btn btn-link\" href=\"mailto:fakeemail@fakeemail.co\"><i className=\"fa fa-envelope-o\" /> campsites@nucamp.co</a>\n                    </div>\n                </div>\n\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h2>Send us your Feedback</h2>\n                        <hr />\n                    </div>\n                    <div className=\"col-md-10\">\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstName\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                <Control.text model=\".firstName\" id=\"firstName\" name=\"firstName\"\n                                        placeholder=\"First Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required, \n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastName\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastName\" id=\"lastName\" name=\"lastName\"\n                                        placeholder=\"Last Name\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15)\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastName\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"phoneNum\" md={2}>Phone</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".phoneNum\" id=\"phoneNum\" name=\"phoneNum\"\n                                        placeholder=\"Phone number\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(10),\n                                            maxLength: maxLength(15),\n                                            isNumber\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".phoneNum\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 10 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                        placeholder=\"Email\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            validEmail\n                                        }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid email address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 4, offset: 2 }}>\n                                    <div className=\"form-check\">\n                                        <Label check>\n                                            <Control.checkbox\n                                                model=\".agree\"\n                                                name=\"agree\"\n                                                className=\"form-check-input\"\n                                            /> {' '}\n                                            <strong>May we contact you?</strong>\n                                        </Label>\n                                    </div>\n                                </Col>\n                                <Col md={4}>\n                                    <Control.select model=\"contactType\" name=\"contactType\" className=\"form-control\">\n                                        <option>By Phone</option>\n                                        <option>By Email</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"feedback\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".feedback\" id=\"feedback\" name=\"feedback\"\n                                        rows=\"12\"\n                                        className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{ size: 10, offset: 2 }}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","/Users/danielconstante/Desktop/React Portfolio/src/components/AboutComponent.js",["84","85"],"import React from \"react\";\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from \"reactstrap\";\nimport { Link } from \"react-router-dom\";\n\nfunction RenderPartner({ partner }) {\n    if (partner) {\n        return (\n            <React.Fragment>\n                <Media object src={partner.image} alt={partner.name} width=\"150\" />\n                <Media body className=\"ml-5 mb-4\">\n                    <Media heading>{partner.name}</Media>\n                    {partner.description}\n                </Media>\n            </React.Fragment>\n        );\n    }\n    return <div />;\n}\n\nfunction About(props) {\n    const partners = props.partners.map((partner) => {\n        return (\n            <Media tag=\"li\" key={partner.id}>\n                <RenderPartner partner={partner} />\n            </Media>\n        );\n    });\n\n    return (\n        <div className=\"container\">\n            <div className=\"row\">\n                <div className=\"col\">\n                    <Breadcrumb dark>\n                        <BreadcrumbItem>\n                            <Link className=\"link\" to=\"/home\">Home</Link>\n                        </BreadcrumbItem>\n                        <BreadcrumbItem active>About Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <h2>About</h2>\n                    <hr />\n                </div>\n            </div>\n            <div className=\"row\" id=\"about\">\n                <div class=\"col-lg-4 mt-lg-5\">\n                    <img id=\"aboutPic\" src=\"/assets/images/dcabout.jpg\" class=\"img-fluid\" alt=\"daniel profile\"></img>\n                </div>\n                <div class=\"col-lg-8 pt-4 pt-lg-0 content mt-lg-5\">\n                    <h3>Web Developer &amp; UI/UX Designer.</h3>\n\n                    <p class=\"font-BioRhyme\">\n\n                        I’m a Front-End Developer located in Dallas/DFW Area. I have a serious passion for\n                        develop webs\n                        and UI effects, animations and creating intuitive, dynamic user experiences.\n\n                        Well-organised person, problem solver, independent employee with high attention to\n                        detail. Fan\n                        of video games, outdoor activities, TV series and Action movies. A family person and\n                        father of\n                        three kids,\n\n                    </p>\n                    <div class=\"row\" id=\"ul\">\n                        <div class=\"col-lg-6\">\n                            <ul>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Birthday:</strong> August\n                                    20,\n                                    1986\n                                </li>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Website:</strong> www.danielconstante.com</li>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Phone:</strong> 469-703-5148</li>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>City:</strong> New Jersey, USA</li>\n                            </ul>\n                        </div>\n                        <div class=\"col-lg-6\">\n                            <ul>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Age:</strong> 34</li>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Email:</strong> daniel_constante@hotmail.com</li>\n                                <li><i class=\"icofont-rounded-right\"></i> <strong>Freelance:</strong> Available</li>\n                            </ul>\n                        </div>\n                    </div>\n                    <p>\n                        I help designers, small agencies and businesses bring their ideas to life. Powered\n                        by VS\n                        Code,\n                        Wordpress or Bootstrap.\n                        Interested in the entire frontend spectrum and working on ambitious projects with\n                        positive\n                        people.\n                    </p>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col\">\n                    <Card className=\"bg-light mt-3\">\n                        <CardBody>\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">\n                                    Writing the first 90 percent of a computer program takes 90 percent of the time. The\n                                    remaining ten\n                                    percent also takes 90\n                                    percent of the time and the final touches also take 90 percent of the time..\n                                </p>\n                                <footer className=\"blockquote-footer\">\n                                    N.J. Rubenking.{\" \"}\n                                    <cite title=\"Source Title\">\n\n                                    </cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;\n","/Users/danielconstante/Desktop/React Portfolio/src/redux/reducer.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/shared/promotions.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/shared/comments.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/shared/campsites.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/shared/partners.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/components/CampsiteInfoComponent.js",["86","87","88","89"],"import React, { Component } from \"react\";\nimport {\n    Card, CardImg, CardText, CardBody, Breadcrumb, BreadcrumbItem,\n    Button, Modal, ModalHeader, ModalBody, Label, Row, Col\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Control, LocalForm, Errors } from 'react-redux-form';\n\nconst required = val => val && val.length;\nconst maxLength = len => val => !val || (val.length <= len);\nconst minLength = len => val => val && (val.length >= len);\n\nclass CommentForm extends Component {\n    constructor(props) {\n        super(props);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.state = {\n            isModalOpen: false,\n            rating: '1',\n            author: ' ',\n            comment: ' ',\n            touched: {\n                rating: false,\n                author: false,\n                comment: false\n            }\n        };\n    }\n\n    handleSubmit(values) {\n        console.log(\"Current state is: \" + JSON.stringify(values));\n        alert(\"Current state is: \" + JSON.stringify(values));\n        this.toggleModal()\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    render() {\n\n        return (\n            <div>\n                <Button color=\"primary\" outline onClick={this.toggleModal}>\n                    <i className=\"fa fa-pencil fa-lg\" />\n                    Submit Comment\n                </Button>\n\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={values => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Col md={10}>\n                                    <Label htmlFor=\"rating\" >Rating</Label>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                        }}>\n                                        <option>Select Rating</option>\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".rating\"\n                                        show=\"touched\" // \n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required'\n                                        }} />\n                                    <Label htmlFor=\"yourName\" >Your Name</Label>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\"\n                                        className=\"form-control\"\n                                        validators={{\n                                            required,\n                                            minLength: minLength(2),\n                                            maxLength: maxLength(15),\n                                        }}>\n                                    </Control.text>\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be at least 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }} />\n                                    <Label htmlFor=\"yourName\" >Comment</Label>\n                                    <Control.textarea model=\".text\" id=\"comment\" name=\"comment\"\n                                        className=\"form-control\"\n                                        rows=\"6\"\n                                        validators={{\n                                            required\n                                        }} />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".text\"\n                                        show=\"touched\"\n                                        component=\"div\"\n                                        messages={{\n                                            required: 'Required'\n                                        }} />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={10}>\n                                    <Button color=\"primary\" type=\"submit\">Submit</Button>{' '}\n                                </Col>\n                            </Row>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n            </div>\n        );\n    }\n}\n\n\n\nfunction RenderCampsite({ campsite }) {\n    return (\n        <div className=\"col-md-5 m-1\">\n            <Card>\n                <CardImg top src={campsite.image} alt={campsite.name} />\n                <CardBody>\n                    <CardText>{campsite.description}</CardText>\n                </CardBody>\n            </Card>\n        </div>\n    )\n}\n\n\nfunction RenderComments({ comments }) {\n    if (comments) {\n        return (\n            <div className=\"col-md-5 m-1\">\n                <h4>Comments</h4>\n                {comments.map((comment) => {\n                    return (\n                        <div key={comment.id}>\n                            <p>{comment.text}</p>\n                            <p>{`--${comment.author}, ${new Intl.DateTimeFormat(\"en-US\", {\n                                year: \"numeric\",\n                                month: \"short\",\n                                day: \"2-digit\",\n                            }).format(new Date(Date.parse(comment.date)))}`}</p>\n                        </div>\n                    );\n                })}\n                <CommentForm />\n            </div>\n        );\n    }\n    return <div />;\n}\n\n\n\n\nfunction CampsiteInfo(props) {\n    if (props.campsite) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Breadcrumb>\n                            <BreadcrumbItem><Link to=\"/portfolio\">Portfolio</Link></BreadcrumbItem>\n                            <BreadcrumbItem active>{props.campsite.name}</BreadcrumbItem>\n                        </Breadcrumb>\n                        <h2>{props.campsite.name}</h2>\n                        <hr />\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <RenderCampsite campsite={props.campsite} />\n                </div>\n            </div>\n        );\n    }\n    return <div />;\n}\n\nexport default CampsiteInfo;","/Users/danielconstante/Desktop/React Portfolio/src/components/DirectoryComponent.js",["90","91","92"],"/Users/danielconstante/Desktop/React Portfolio/src/components/FooterComponent.js",[],"/Users/danielconstante/Desktop/React Portfolio/src/components/HeaderComponent.js",["93","94","95","96","97","98","99","100"],"import React, { Component } from 'react';\nimport {\n    Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron,\n    Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label\n} from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\n\nclass Header extends Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n\n        this.toggleNav = this.toggleNav.bind(this);\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    render() {\n        return (\n            <React.Fragment>\n                <Jumbotron fluid>\n                    <div className=\"container\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <h1>Hello, I'm Daniel,<br/>Web Developer!</h1>\n                                <h2>Living in Aubrey, TX.</h2>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n                <Navbar dark sticky=\"top\" expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarBrand className=\"mr-auto font-weight-bolder\"><i className=\"fa fa-angle-left fa-lg font-weight-bolder\"/>  DC WEB DEVELOPER /<i className=\"fa fa-angle-right fa-lg font-weight-bolder\"/></NavbarBrand>\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar className=\"ml-auto\">\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-uppercase font-weight-bolder\" to=\"/home\">\n                                        <i className=\"fa fa-home fa-lg\" /> Home\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-uppercase font-weight-bolder\" to=\"/about\">\n                                        <i className=\"fa fa-info-circle fa-lg\" /> About\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-uppercase font-weight-bolder\" to=\"/portfolio\">\n                                        <i className=\"fa fa-briefcase fa-lg\" /> Portfolio\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-uppercase font-weight-bolder\" to=\"/resume\">\n                                        <i className=\"fa fa-file fa-lg\" /> Resume\n                                    </NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link text-uppercase font-weight-bolder\" to=\"/contact\">\n                                        <i className=\"fa fa-address-card fa-lg\" /> Contact \n                                    </NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                    </div>\n                </Navbar>\n            </React.Fragment>\n        );\n    }\n}\n\nexport default Header;",{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":80,"column":33,"nodeType":"107","messageId":"108","endLine":88,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":105,"column":37,"nodeType":"107","messageId":"108","endLine":113,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":130,"column":37,"nodeType":"107","messageId":"108","endLine":139,"endColumn":39},{"ruleId":"105","severity":1,"message":"106","line":157,"column":37,"nodeType":"107","messageId":"108","endLine":164,"endColumn":39},{"ruleId":"105","severity":1,"message":"109","line":181,"column":45,"nodeType":"107","messageId":"108","endLine":185,"endColumn":47},{"ruleId":"105","severity":1,"message":"110","line":191,"column":37,"nodeType":"107","messageId":"108","endLine":191,"endColumn":117},{"ruleId":"105","severity":1,"message":"111","line":200,"column":37,"nodeType":"107","messageId":"108","endLine":203,"endColumn":39},{"ruleId":"112","severity":1,"message":"113","line":2,"column":54,"nodeType":"114","messageId":"115","endLine":2,"endColumn":64},{"ruleId":"112","severity":1,"message":"116","line":21,"column":11,"nodeType":"114","messageId":"115","endLine":21,"endColumn":19},{"ruleId":"105","severity":1,"message":"110","line":58,"column":37,"nodeType":"107","messageId":"108","endLine":62,"endColumn":44},{"ruleId":"105","severity":1,"message":"106","line":79,"column":37,"nodeType":"107","messageId":"108","endLine":85,"endColumn":44},{"ruleId":"105","severity":1,"message":"111","line":98,"column":37,"nodeType":"107","messageId":"108","endLine":103,"endColumn":46},{"ruleId":"112","severity":1,"message":"117","line":143,"column":10,"nodeType":"114","messageId":"115","endLine":143,"endColumn":24},{"ruleId":"118","severity":1,"message":"119","line":55,"column":25,"nodeType":"107","messageId":"120","endLine":56,"endColumn":45,"fix":"121"},{"ruleId":"118","severity":1,"message":"119","line":62,"column":21,"nodeType":"107","messageId":"120","endLine":62,"endColumn":141,"fix":"122"},{"ruleId":"118","severity":1,"message":"119","line":65,"column":21,"nodeType":"107","messageId":"120","endLine":66,"endColumn":41,"fix":"123"},{"ruleId":"112","severity":1,"message":"124","line":4,"column":5,"nodeType":"114","messageId":"115","endLine":4,"endColumn":11},{"ruleId":"112","severity":1,"message":"125","line":4,"column":13,"nodeType":"114","messageId":"115","endLine":4,"endColumn":18},{"ruleId":"112","severity":1,"message":"126","line":4,"column":20,"nodeType":"114","messageId":"115","endLine":4,"endColumn":31},{"ruleId":"112","severity":1,"message":"127","line":4,"column":33,"nodeType":"114","messageId":"115","endLine":4,"endColumn":42},{"ruleId":"112","severity":1,"message":"128","line":4,"column":44,"nodeType":"114","messageId":"115","endLine":4,"endColumn":48},{"ruleId":"112","severity":1,"message":"129","line":4,"column":50,"nodeType":"114","messageId":"115","endLine":4,"endColumn":59},{"ruleId":"112","severity":1,"message":"130","line":4,"column":61,"nodeType":"114","messageId":"115","endLine":4,"endColumn":66},{"ruleId":"112","severity":1,"message":"131","line":4,"column":68,"nodeType":"114","messageId":"115","endLine":4,"endColumn":73},"no-native-reassign",["132"],"no-negated-in-lhs",["133"],"react/jsx-pascal-case","Imported JSX component text must be in PascalCase or SCREAMING_SNAKE_CASE","JSXOpeningElement","usePascalOrSnakeCase","Imported JSX component checkbox must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component select must be in PascalCase or SCREAMING_SNAKE_CASE","Imported JSX component textarea must be in PascalCase or SCREAMING_SNAKE_CASE","no-unused-vars","'CardHeader' is defined but never used.","Identifier","unusedVar","'partners' is assigned a value but never used.","'RenderComments' is defined but never used.","react/jsx-no-target-blank","Using target=\"_blank\" without rel=\"noreferrer\" is a security risk: see https://html.spec.whatwg.org/multipage/links.html#link-type-noopener","noTargetBlank",{"range":"134","text":"135"},{"range":"136","text":"135"},{"range":"137","text":"135"},"'Button' is defined but never used.","'Modal' is defined but never used.","'ModalHeader' is defined but never used.","'ModalBody' is defined but never used.","'Form' is defined but never used.","'FormGroup' is defined but never used.","'Input' is defined but never used.","'Label' is defined but never used.","no-global-assign","no-unsafe-negation",[2226,2226]," rel=\"noreferrer\"",[2542,2542],[2809,2809]]